pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    AWS_ACCOUNT_ID = '810931304379'  // Replace with your actual AWS Account ID
    ECR_REPO = 'custom-nginx'
    IMAGE_TAG = '' // Will be set dynamically
    REPO_URL = 'https://github.com/ehsan10331/nginx-app.git'
    BRANCH_NAME = 'main'
  }

  stages {
    stage('Checkout Code') {
      steps {
        // Cloning your public GitHub repo explicitly
        git branch: "${BRANCH_NAME}", url: "${REPO_URL}"
      }
    }

    stage('Generate Image Tag') {
      steps {
        script {
          def shortCommit = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
          def timestamp = sh(script: "date +%Y%m%d%H%M%S", returnStdout: true).trim()
          IMAGE_TAG = "${shortCommit}-${timestamp}"
          env.IMAGE_TAG = IMAGE_TAG
          env.ECR_URL = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"
          echo "üìù Image tag generated: ${IMAGE_TAG}"
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh "docker build -t ${ECR_REPO}:${IMAGE_TAG} ."
      }
    }

    stage('Tag Image for ECR') {
      steps {
        sh "docker tag ${ECR_REPO}:${IMAGE_TAG} ${ECR_URL}:${IMAGE_TAG}"
      }
    }

    stage('Login to ECR') {
      steps {
        sh """
          aws ecr get-login-password --region ${AWS_REGION} | \\
          docker login --username AWS --password-stdin ${ECR_URL}
        """
      }
    }

    stage('Push to ECR') {
      steps {
        sh "docker push ${ECR_URL}:${IMAGE_TAG}"
      }
    }

    stage('Update Helm Values') {
      steps {
        script {
          def valuesPath = "helm/nginx-chart/values.yaml"
          sh """
            pwd
            ls -l
            sed -i "s|tag:.*|tag: "${IMAGE_TAG}"|" helm/nginx-chart/values.yaml
            echo "üîÑ Updated helm/nginx-chart/values.yaml with tag ${IMAGE_TAG}:"
            cat helm/nginx-chart/values.yaml
          """
        }
      }
    }

    stage('Commit and Push Updated Helm Values') {
      steps {
        script {
          def GITHUB_USERNAME = 'ehsan10331'
          def GITHUB_TOKEN = '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'

          def valuesPath = "helm/nginx-chart/values.yaml"
          def branch = "main" // Or your branch name

          sh """
            git config user.email "ehsan10331@gmail.com"
            git config user.name "ehsan10331"
            git remote set-url origin https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/ehsan10331/nginx-app.git
            git add ${valuesPath}
            git commit -m "üîÑ Update image tag to ${IMAGE_TAG}"
            git push origin ${branch}
          """
        }
      }
    }

    stage('Deploy to EKS using Helm') {
      steps {
        sh """
          #helm upgrade --install nginx-release ./helm \\
            --namespace prod \\
            --set image.repository=${ECR_URL} \\
            --set image.tag=${IMAGE_TAG}
        """
      }
    }
  }

  post {
    success {
      echo "‚úÖ Deployment succeeded with tag: ${IMAGE_TAG}"
    }
    failure {
      echo "‚ùå Deployment failed. Check logs."
    }
  }
}
